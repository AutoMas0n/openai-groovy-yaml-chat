create a mermaid script diagram explaining at a high level these two scripts (plus system.properties)
system.properties:```properties4=Answerconcisely,precisely,nosummaries.Say's'or'sry'forapologiesandproceed:0:72004e=Youareahelpfulassistant:0:72004c=Actasamasterprogrammer,respondincodeforspecifiedlanguageonly:0:7200```server.groovy:```groovydefsendRequest(StringreqMethod,StringURL,Stringmessage,booleanfailOnError,booleanuseProxy){Authenticatorauthenticator=newAuthenticator(){publicPasswordAuthenticationgetPasswordAuthentication(){return(newPasswordAuthentication(username,password.toCharArray()))}}defresponse=[:]defrequestif(false){Authenticator.setDefault(authenticator)Proxyproxy=newProxy(Proxy.Type.HTTP,newInetSocketAddress("proxy.com",8080))request=newURL(URL).openConnection(proxy)}else{request=newURL(URL).openConnection()}request.setDoOutput(true)request.setRequestMethod(reqMethod)request.setRequestProperty('Authorization',"Bearer${args[1]}")request.setRequestProperty('Content-Type','application/json')if(!message.isEmpty())request.getOutputStream().write(message.getBytes("UTF-8"))defgetRC=request.getResponseCode()response.rc=getRCdefslurper=newJsonSlurper()defresulttry{if(request.getInputStream().available())result=slurper.parseText(request.getInputStream().getText())response.result=result}catch(Exceptionignored){if(failOnError){thrownewException("Requestmadeto$URLfailed.\nResponsecodeis:$getRC\n${request.getResponseMessage()}\n${request.getErrorStream().getText()}")}else{response.result=request.getErrorStream().getText()}}printlnresponsereturnresponse}intport=args[0].toInteger()HttpServerserver=HttpServer.create(newInetSocketAddress(port),0)server.createContext('/sendRequest',{HttpExchangeexchange->definput=exchange.getRequestBody().getText()defparsedInput=newJsonSlurper().parseText(input)defresponse=sendRequest(parsedInput.reqMethod,parsedInput.URL,parsedInput.message,parsedInput.failOnError,parsedInput.useProxy)exchange.getResponseHeaders().add('Content-Type','application/json')exchange.sendResponseHeaders(200,0)defresponseBody=exchange.getResponseBody()responseBody.write(newJsonBuilder(response).toString().getBytes("UTF-8"))responseBody.close()})server.start()CountDownLatchlatch=newCountDownLatch(1)latch.await()```openai-chat-yaml.groovy:```groovyclassOpenAIChat{...//Assumeinstantiatedvariablesstaticvoidmain(String[]args){newOpenAIChat(args).startListener()}OpenAIChat(String[]args){this.args=args}voidstartListener(){defprops=newProperties()newFile('system.properties').withInputStream{props.load(it)}while(true){StringconsoleInput=System.console().readLine'PressEntertosubmittheinputfile...'if(consoleInput.contains("clear")){convYamlFile.write("conversation:[]")conversation=[]}elseif(consoleInput.contains("reset")){convYamlFile.write("conversation:[]")conversation=[]outputFile.write("")}elseif(consoleInput.contains("backup")){backup()outputFile.write("")}else{systemRoleInitContent="youareahelpfulassistant"defmodelChoice=1defmax_tokenChoice=3200props.each{propKey,propValue->def(prompt,model,tokens)=propValue.split(':')model=model.toInteger()tokens=tokens.toInteger()if(consoleInput.equals(propKey)){systemRoleInitContent=promptmodelChoice=modelmax_tokenChoice=tokens}}if(!convYamlFile.exists())convYamlFile.createNewFile()if(convYamlFile.text.isEmpty())convYamlFile.write("conversation:[]")Yamlyaml=newYaml()Map<String,List<Map<String,String>>>yamlMap=yaml.load(convYamlFile.text)conversation=yamlMap.get("conversation")updateCoversationYaml('user',userInputFile.text)setJsonPayload(modelChoice,max_tokenChoice)if(conversation==lastConversation){println"Theinputfilehasnotchangedsincethelastsubmission.Skipping..."}else{processConversation()}}}}voidprocessConversation(){StringjsonString=JsonOutput.toJson(json)defaiResponsedefserverResponsetry{serverResponse=invokeSendRequest('POST',url,jsonString,false,true).resultaiResponse=serverResponse.choices[0].message.content}catch(Exceptione){...}if(outputFile.exists()){...}else{outputFile.write('#Conversation\n')}outputFile.append(aiResponse)StringupdatedYaml=updateCoversationYaml('assistant',aiResponse)convYamlFile.write("conversation:\n"+updatedYaml)lastConversation=conversation}StringupdateCoversationYaml(Stringrole,Stringtext){Map<String,String>newEntry=[(role):text]if(!conversation){convYamlFile.write("conversation:[]")conversation=[]}conversation.add(newEntry)DumperOptionsoptions=newDumperOptions()options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK)options.setIndent(2)Yamldumper=newYaml(options)returndumper.dump(conversation)}defbackup(){...//backupoutput.mdfiletopwd/chatsdirectory}voidsetJsonPayload(intmodelChoice,intmax_tokenChoice){json=[...//youcaninferthis]printlnjson.toString()json.messages.add([role:'system',content:systemRoleInitContent])conversation.each{entry->entry.each{inputKey,inputContent->json.messages.add([role:inputKey,content:"""${inputContent}"""])}}}definvokeSendRequest(StringreqMethod,StringURL,Stringmessage,booleanfailOnError,booleanuseProxy){StringserverUrl="http://localhost:${args[0]}/sendRequest"defconnection=newURL(serverUrl).openConnection()connection.setRequestMethod('POST')connection.setDoOutput(true)connection.setRequestProperty('Content-Type','application/json')defpayload=[...//Youcaninferthis]connection.getOutputStream().write(newJsonBuilder(payload).toString().getBytes("UTF-8"))defresponse=newJsonSlurper().parseText(connection.getInputStream().getText())returnresponse}}```